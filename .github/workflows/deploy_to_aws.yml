name: Deploy to AWS

on:
  workflow_call:
    inputs:
      repository:
        description: "Repository in format owner/repo"
        required: true
        type: string
      refspec:
        description: "Commit ref"
        required: true
        type: string
      docker_tag:
        description: "Commit short SHA"
        required: true
        type: string
      env_name:
        required: true
        type: string
      domain:
        required: true
        type: string
    secrets:
      PULUMI_ACCESS_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      ECR_URL:
        required: true
      ROUTE53_ZONE_ID:
        required: true
      IAM_SERVER_SSM_ARN:
        required: true

jobs:
  deploy_to_aws:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.refspec }}
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          cache: "yarn"
          cache-dependency-path: infra/package-lock.json
      # Update the pulumi stack with new image
      - run: |
          npm install
          cd ${{ inputs.env_name }}
          pulumi stack select -c gitcoin/dpopp/${{ inputs.env_name }}
          pulumi config -s gitcoin/dpopp/${{ inputs.env_name }} set aws:region us-east-1 --non-interactive
        working-directory: infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - uses: pulumi/actions@v3
        id: pulumi
        with:
          command: up
          stack-name: gitcoin/dpopp/${{ inputs.env_name }}
          upsert: false
          work-dir: infra/${{ inputs.env_name }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DOCKER_GTC_PASSPORT_IAM_IMAGE: ${{secrets.ECR_URL}}:${{ inputs.docker_tag }}
          ROUTE_53_ZONE: ${{ secrets.ROUTE53_ZONE_ID }}
          DOMAIN: ${{ inputs.domain }}
          IAM_SERVER_SSM_ARN: ${{ secrets.IAM_SERVER_SSM_ARN }}
